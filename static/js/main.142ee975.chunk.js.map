{"version":3,"sources":["actions/actions.js","components/CryptoCard.jsx","components/CryptoList.jsx","components/Pagination.jsx","components/CardDisplay.jsx","endpoint.js","components/ToggleButton.jsx","App.js","reducers/reducer.js","store.js","index.js"],"names":["GET_COINS","GET_COINS_SUCCESS","GET_COINS_FAILURE","PAGE_SELECT","LIST_TOGGLE","useStyles","makeStyles","root","maxWidth","minHeight","media","height","width","CryptoCard","coin","classes","Grid","item","xs","md","lg","Card","className","CardContent","Typography","gutterBottom","variant","component","name","CardMedia","image","title","symbol","color","current_price","total_volume","high_24h","low_24h","theme","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","CryptoList","React","useState","open","setOpen","button","onClick","primary","in","timeout","unmountOnExit","disablePadding","secondary","connect","state","coins","loading","hasErrors","currentPage","coinsPerPage","listToggle","marginTop","ul","paddingRight","BasicPagination","dispatch","useDispatch","Pagination","siblingCount","count","onChange","event","value","type","payload","useEffect","a","axios","get","response","data","indexOfLastCoin","indexOfFirstCoin","currentCoins","slice","container","align","map","id","marginBottom","StandaloneToggleButton","selected","setSelected","handleChange","ToggleButton","App","Container","initialState","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAGaA,EAAY,YACZC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAc,cACdC,EAAc,c,wDCCrBC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,UAAW,KAEbC,MAAO,CACLC,OAAQ,IACRC,MAAO,OAIEC,EAAa,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACpBC,EAAUV,IAChB,OACE,cAACW,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACC,EAAA,EAAD,CAAMC,UAAWP,EAAQR,KAAzB,UACE,cAACgB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,IAAhD,SACGb,EAAKc,SAGV,cAACC,EAAA,EAAD,CACEP,UAAWP,EAAQL,MACnBoB,MAAOhB,EAAKgB,MACZC,MAAOjB,EAAKkB,SAEd,eAACT,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,IAAnC,mCAGA,eAACH,EAAA,EAAD,CAAYE,QAAQ,KAAKO,MAAM,gBAAgBN,UAAU,IAAzD,qBACWb,EAAKoB,iBAEhB,eAACV,EAAA,EAAD,CAAYE,QAAQ,KAAKO,MAAM,gBAAgBN,UAAU,IAAzD,2BACiBb,EAAKqB,gBAEtB,eAACX,EAAA,EAAD,CAAYE,QAAQ,KAAKO,MAAM,gBAAgBN,UAAU,IAAzD,4BACkBb,EAAKsB,YAEvB,eAACZ,EAAA,EAAD,CAAYE,QAAQ,KAAKO,MAAM,gBAAgBN,UAAU,IAAzD,2BACiBb,EAAKuB,oB,wHCrC1BhC,EAAYC,sBAAW,SAACgC,GAAD,MAAY,CACvC/B,KAAM,CACJK,MAAO,OACPJ,SAAU,IACV+B,gBAAiBD,EAAME,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,YAAaN,EAAMO,QAAQ,QAIlBC,EAAa,SAAC,GAAY,IAAXhC,EAAU,EAAVA,KACpBC,EAAUV,IAChB,EAAwB0C,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACE,cAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,CAAMS,UAAU,MAAM,kBAAgB,wBAAuBL,UAAWP,EAAQR,KAAhF,UACE,eAAC,IAAD,CAAU4C,QAAM,EAACC,QAPH,WAClBF,GAASD,IAML,UACE,cAAC,IAAD,CAAcI,QAASvC,EAAKc,OAC3BqB,EAAO,cAAC,IAAD,IAAiB,cAAC,IAAD,OAE3B,eAAC,IAAD,CAAUK,GAAIL,EAAMM,QAAQ,OAAOC,eAAa,EAAhD,UACE,cAAC,IAAD,CAAM7B,UAAU,MAAM8B,gBAAc,EAApC,SACE,cAAC,IAAD,CAAUN,QAAM,EAAC7B,UAAWP,EAAQ4B,OAApC,SACE,cAAC,IAAD,CAAcU,QAAQ,8BAG1B,cAAC,IAAD,CAAM1B,UAAU,MAAM8B,gBAAc,EAApC,SACE,cAAC,IAAD,CAAUN,QAAM,EAAC7B,UAAWP,EAAQ4B,OAApC,SACE,cAAC,IAAD,CAAce,UAAW,gBAAkB5C,EAAKoB,oBAGpD,cAAC,IAAD,CAAMP,UAAU,MAAM8B,gBAAc,EAApC,SACE,cAAC,IAAD,CAAUN,QAAM,EAAC7B,UAAWP,EAAQ4B,OAApC,SACE,cAAC,IAAD,CAAce,UAAW,iBAAmB5C,EAAKqB,mBAGrD,cAAC,IAAD,CAAMR,UAAU,MAAM8B,gBAAc,EAApC,SACE,cAAC,IAAD,CAAUN,QAAM,EAAC7B,UAAWP,EAAQ4B,OAApC,SACE,cAAC,IAAD,CAAce,UAAW,kBAAoB5C,EAAKsB,eAGtD,cAAC,IAAD,CAAMT,UAAU,MAAM8B,gBAAc,EAApC,SACE,cAAC,IAAD,CAAUN,QAAM,EAAC7B,UAAWP,EAAQ4B,OAApC,SACE,cAAC,IAAD,CAAce,UAAW,iBAAmB5C,EAAKuB,uB,GAoBhDsB,aAXS,SAACC,GACvB,MAAO,CACLC,MAAOD,EAAMC,MACbC,QAASF,EAAME,QACfC,UAAWH,EAAMG,UACjBC,YAAaJ,EAAMI,YACnBC,aAAcL,EAAMK,aACpBC,WAAYN,EAAMM,cAIPP,CAAyBb,G,QCzElCzC,EAAYC,aAAW,SAACgC,GAAD,MAAY,CACvC/B,KAAM,CACJ,QAAS,CACP4D,UAAW7B,EAAMO,QAAQ,KAG7BuB,GAAI,CACFxB,YAAa,IACbyB,aAAc,SAILC,EAAkB,WAC7B,IAAMvD,EAAUV,IACVkE,EAAWC,cAIjB,OACE,cAACxD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,qBAAKI,UAAWP,EAAQR,KAAxB,SACE,cAACkE,EAAA,EAAD,CAAYnD,UAAWP,EAAQqD,GAAIM,aAAc,GAAIC,MAAO,GAAI1C,MAAM,UAAU2C,SANjE,SAACC,EAAOC,GAC3BP,EHDiC,CACnCQ,KAAM5E,EACN6E,QGDsBF,YCkCTnB,eAXS,SAACC,GACvB,MAAO,CACLC,MAAOD,EAAMC,MACbC,QAASF,EAAME,QACfC,UAAWH,EAAMG,UACjBC,YAAaJ,EAAMI,YACnBC,aAAcL,EAAMK,aACpBC,WAAYN,EAAMM,cAIPP,EAjDK,SAAC,GAAkF,IAAjFY,EAAgF,EAAhFA,SAAUV,EAAsE,EAAtEA,MAAOC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WACpFe,qBAAU,WACRV,EJsBF,uCAAO,WAAOA,GAAP,iBAAAW,EAAA,6DACLX,EAxB2B,CAC7BQ,KAAM/E,IAsBC,kBAGkBmF,IAAMC,IKnChB,4HLgCR,cAGCC,EAHD,gBAIgBA,EAJhB,OAIGC,EAJH,OAKHf,GAxB0BV,EAwBDyB,EAAKA,KAxBO,CACzCP,KAAM9E,EACN+E,QAASnB,KAiBF,kDAOHU,EArBgC,CACpCQ,KAAM7E,IAaC,kCAnBsB,IAAC2D,IAmBvB,qBAAP,yDIrBG,CAACU,IAEJ,IAAMgB,EAAkBvB,EAAcC,EAChCuB,EAAmBD,EAAkBtB,EACrCwB,EAAe5B,EAAM6B,MAAMF,EAAkBD,GAanD,OAAIrB,EAEA,eAAClD,EAAA,EAAD,CAAM2E,WAAS,EAACC,MAAM,SAAS/C,QAAS,EAAxC,UAPEiB,EAAgB,gDAChBC,EAAkB,uDACf0B,EAAaI,KAAI,SAAC/E,GAAD,OAAU,cAAC,EAAD,CAA0BA,KAAMA,GAAfA,EAAKgF,OAOrD,cAAC,EAAD,OAMD,eAAC9E,EAAA,EAAD,CAAM2E,WAAS,EAACC,MAAM,SAAS/C,QAAS,EAAxC,UApBEiB,EAAgB,iDAChBC,EAAkB,wDACf0B,EAAaI,KAAI,SAAC/E,GAAD,OAAU,cAAC,EAAD,CAA0BA,KAAMA,GAAfA,EAAKgF,OAoBrD,cAAC,EAAD,U,SElCDzF,EAAYC,sBAAW,SAACgC,GAAD,MAAY,CACvC/B,KAAM,CACJI,OAAQ,GACRoF,aAAc,QAIH,SAASC,IACtB,MAAgCjD,IAAMC,UAAS,GAA/C,mBAAOiD,EAAP,KAAiBC,EAAjB,KACMnF,EAAUV,IACVkE,EAAWC,cAEX2B,EAAe,WACnBD,GAAaD,GACb1B,ENO6B,CAC/BQ,KAAM3E,KMLN,OAAI6F,EAEA,cAACG,EAAA,EAAD,CAActB,MAAO,EAAGxD,UAAWP,EAAQR,KAAMqE,SAAU,WAAOuB,KAAlE,SACE,4CAKF,cAACC,EAAA,EAAD,CAActB,MAAO,EAAGxD,UAAWP,EAAQR,KAAMqE,SAAU,WAAOuB,KAAlE,SACE,4CCdOE,MAZf,WACE,OACE,qBAAK/E,UAAU,MAAf,SACE,eAACgF,EAAA,EAAD,CAAW9F,SAAS,KAApB,UACA,+DACE,cAACwF,EAAD,IACA,cAAC,EAAD,U,oCCNKO,GAAe,CAC1B1C,MAAO,GACPC,SAAS,EACTC,WAAW,EACXC,YAAa,EACbC,aAAc,EACdC,YAAY,GCPd,IAEesC,GAFDC,uBDUC,WAAgD,IAA/B7C,EAA8B,uDAAtB2C,GAAcG,EAAQ,uCAC5D,OAAQA,EAAO3B,MACb,KAAK/E,EACH,OAAO,6BACF4D,GADL,IACYE,SAAS,IAEvB,KAAK7D,EACH,OAAO,6BACF2D,GADL,IACYC,MAAO6C,EAAO1B,QAASlB,SAAS,EAAOC,WAAW,IAEhE,KAAK7D,EACH,OAAO,6BACF0D,GADL,IACYE,SAAS,EAAOC,WAAW,IAEzC,KAAK5D,EACH,OAAO,6BACFyD,GADL,IACYI,YAAa0C,EAAO1B,UAElC,KAAK5E,EACH,OAAO,6BACFwD,GADL,IACYM,YAAaN,EAAMM,aAEjC,QACE,OAAON,KCjCsB+C,+BAAoBC,0BAAgBC,OCEvEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.142ee975.chunk.js","sourcesContent":["import axios from 'axios'\nimport endpoint from '../endpoint'\n\nexport const GET_COINS = 'GET_COINS'\nexport const GET_COINS_SUCCESS = 'GET_COINS_SUCCESS'\nexport const GET_COINS_FAILURE = 'GET_COINS_FAILURE'\nexport const PAGE_SELECT = 'PAGE_SELECT'\nexport const LIST_TOGGLE = 'LIST_TOGGLE'\n\nexport const getCoins = () => ({\n  type: GET_COINS\n})\n\nexport const getCoinsSuccess = (coins) => ({\n  type: GET_COINS_SUCCESS,\n  payload: coins\n})\n\nexport const getCoinsFailure = () => ({\n  type: GET_COINS_FAILURE\n})\n\nexport const pageSelect = (page) => ({\n  type: PAGE_SELECT,\n  payload: page\n})\n\nexport const listToggle = () => ({\n  type: LIST_TOGGLE\n})\n\nexport function callCryptoApi() {\n  return async (dispatch) => {\n    dispatch(getCoins())\n    try {     \n      let response = await axios.get(endpoint)\n      const data = await response\n      dispatch(getCoinsSuccess(data.data))\n    } catch (error) {\n      dispatch(getCoinsFailure())\n    }\n  }\n}","import React from 'react'\nimport {Card} from '@material-ui/core'\nimport {CardMedia} from '@material-ui/core'\nimport {CardContent} from '@material-ui/core'\nimport {Typography} from '@material-ui/core'\nimport {Grid} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/'\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    minHeight: 550\n  },\n  media: {\n    height: 250,\n    width: 250\n  },\n})\n\nexport const CryptoCard = ({coin}) => {\n  const classes = useStyles()\n  return(\n    <Grid item xs={12} md={6} lg={3}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant='h5' component='p'>\n            {coin.name}\n          </Typography>\n        </CardContent>\n        <CardMedia\n          className={classes.media}\n          image={coin.image}\n          title={coin.symbol}\n        />\n        <CardContent>\n          <Typography variant='h6' component='p'>\n            All prices are in USD\n          </Typography>\n          <Typography variant='h6' color='textSecondary' component='p'>\n            Price: ${coin.current_price}\n          </Typography>\n          <Typography variant='h6' color='textSecondary' component='p'>\n            Total volume: {coin.total_volume}\n          </Typography>\n          <Typography variant='h6' color='textSecondary' component='p'>\n            24 hour high: ${coin.high_24h}\n          </Typography>\n          <Typography variant='h6' color='textSecondary' component='p'>\n            24 hour low: ${coin.low_24h}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {Grid} from '@material-ui/core'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}))\n\nexport const CryptoList = ({coin}) => {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <Grid item xs={12}>\n      <List component='nav' aria-labelledby='nested-list-subheader'className={classes.root}>\n        <ListItem button onClick={handleClick}>\n          <ListItemText primary={coin.name} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout='auto' unmountOnExit>\n          <List component='div' disablePadding>\n            <ListItem button className={classes.nested}>\n              <ListItemText primary='All prices are in USD' />\n            </ListItem>\n          </List>\n          <List component='div' disablePadding>\n            <ListItem button className={classes.nested}>\n              <ListItemText secondary={'Coin price: $' + coin.current_price} />\n            </ListItem>\n          </List>\n          <List component='div' disablePadding>\n            <ListItem button className={classes.nested}>\n              <ListItemText secondary={'Total volume: ' + coin.total_volume} />\n            </ListItem>\n          </List>\n          <List component='div' disablePadding>\n            <ListItem button className={classes.nested}>\n              <ListItemText secondary={'24 hour high: $' + coin.high_24h} />\n            </ListItem>\n          </List>\n          <List component='div' disablePadding>\n            <ListItem button className={classes.nested}>\n              <ListItemText secondary={'24 hour low: $' + coin.low_24h} />\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    coins: state.coins,\n    loading: state.loading,\n    hasErrors: state.hasErrors,\n    currentPage: state.currentPage,\n    coinsPerPage: state.coinsPerPage,\n    listToggle: state.listToggle\n  }\n}\n\nexport default connect(mapStateToProps)(CryptoList)","import React from 'react'\nimport {makeStyles} from '@material-ui/core/'\nimport {Grid} from '@material-ui/core'\nimport {Pagination} from '@material-ui/lab/'\nimport {pageSelect} from '../actions/actions'\nimport {useDispatch} from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2)\n    },\n  },\n  ul: {\n    paddingLeft: 100,\n    paddingRight: 100\n  }\n}))\n\nexport const BasicPagination = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const handleChange = (event, value) => {\n    dispatch(pageSelect(value))\n  }\n  return(\n    <Grid item xs={12}>\n      <div className={classes.root}>\n        <Pagination className={classes.ul} siblingCount={20} count={25} color='primary' onChange={handleChange} />\n      </div>\n    </Grid>\n  )\n}","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {Grid} from '@material-ui/core'\nimport {callCryptoApi} from '../actions/actions'\nimport {CryptoCard} from './CryptoCard'\nimport {CryptoList} from './CryptoList'\nimport {BasicPagination} from './Pagination'\n\nconst CardDisplay = ({dispatch, coins, loading, hasErrors, currentPage, coinsPerPage, listToggle}) => {\n  useEffect(() => {\n    dispatch(callCryptoApi())\n  }, [dispatch])\n\n  const indexOfLastCoin = currentPage * coinsPerPage\n  const indexOfFirstCoin = indexOfLastCoin - coinsPerPage\n  const currentCoins = coins.slice(indexOfFirstCoin, indexOfLastCoin)\n\n  const renderCards = () => {\n    if (loading) return <p>Loading cards...</p>\n    if (hasErrors) return <p>Unable to display cards</p>\n    return currentCoins.map((coin) => <CryptoCard key={coin.id} coin={coin} />)\n  }\n  const renderListItems = () => {\n    if (loading) return <p>Loading list...</p>\n    if (hasErrors) return <p>Unable to display list</p>\n    return currentCoins.map((coin) => <CryptoList key={coin.id} coin={coin} />)\n  }\n\n  if (listToggle) {\n    return(\n      <Grid container align='center' spacing={4}>\n       {renderListItems()}\n       <BasicPagination/>\n      </Grid>\n    )\n  }\n  else {\n    return(\n      <Grid container align='center' spacing={4}>\n       {renderCards()}\n       <BasicPagination/>\n      </Grid>  \n    )\n  } \n}\n\nconst mapStateToProps = (state) => {\n  return {\n    coins: state.coins,\n    loading: state.loading,\n    hasErrors: state.hasErrors,\n    currentPage: state.currentPage,\n    coinsPerPage: state.coinsPerPage,\n    listToggle: state.listToggle\n  }\n}\n\nexport default connect(mapStateToProps)(CardDisplay)","const endpoint = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'\nexport default endpoint","import React from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {listToggle} from '../actions/actions'\nimport {useDispatch} from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 30,\n    marginBottom: 30\n  }\n}))\n\nexport default function StandaloneToggleButton() {\n  const [selected, setSelected] = React.useState(false)\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleChange = () => {\n    setSelected(!selected)\n    dispatch(listToggle())\n  }\n\n  if (selected) {\n    return (\n      <ToggleButton value={1} className={classes.root} onChange={() => {handleChange()}}>\n        <p>Card View</p>\n      </ToggleButton>\n    )\n  } else {\n    return (\n      <ToggleButton value={1} className={classes.root} onChange={() => {handleChange()}}>\n        <p>List View</p>\n      </ToggleButton>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport {Container} from '@material-ui/core'\nimport CardDisplay from './components/CardDisplay'\nimport StandaloneToggleButton from './components/ToggleButton'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container maxWidth='lg'>\n      <h1>Your Fuse Inc. React Dev Test</h1>\n        <StandaloneToggleButton/>\n        <CardDisplay/>\n      </Container>\n    </div>\n  )\n}\n\nexport default App","import {GET_COINS} from '../actions/actions'\nimport {GET_COINS_SUCCESS} from '../actions/actions'\nimport {GET_COINS_FAILURE} from '../actions/actions'\nimport {PAGE_SELECT} from '../actions/actions'\nimport {LIST_TOGGLE} from '../actions/actions'\n\nexport const initialState = {\n  coins: [],\n  loading: false,\n  hasErrors: false,\n  currentPage: 1,\n  coinsPerPage: 4,\n  listToggle: false\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COINS:\n      return {\n        ...state, loading: true\n      }\n    case GET_COINS_SUCCESS:\n      return {\n        ...state, coins: action.payload, loading: false, hasErrors: false\n      }\n    case GET_COINS_FAILURE:\n      return {\n        ...state, loading: false, hasErrors: true\n      }\n    case PAGE_SELECT:\n      return {\n        ...state, currentPage: action.payload\n      }\n    case LIST_TOGGLE:\n      return {\n        ...state, listToggle: !state.listToggle\n      }\n    default:\n      return state\n  }\n}","import thunk from 'redux-thunk'\nimport {createStore, applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport reducer from './reducers/reducer'\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}